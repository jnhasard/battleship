{"ast":null,"code":"var _jsxFileName = \"/Users/jnhasard/Google Drive/11vo Semestre/Web/Interrogaciones/Examen/battleship/src/components/box.js\";\nimport React, { useEffect } from \"react\";\nimport { postAction } from \"./api/requests\";\nimport \"./styles/box.css\";\n\nconst Box = ({\n  pos,\n  selected,\n  setSelected,\n  board,\n  setBoard,\n  action,\n  setAction,\n  play,\n  logs,\n  setLogs,\n  gameId,\n  setLoading,\n  setWin\n}) => {\n  const letters = {\n    A: 1,\n    B: 2,\n    C: 3,\n    D: 4,\n    E: 5,\n    F: 6,\n    G: 7,\n    H: 8,\n    I: 9,\n    J: 10\n  };\n  const fireRange = {\n    F: 4,\n    C: 3,\n    D: 2,\n    A: 1\n  };\n  const moveRange = {\n    F: 2,\n    C: 2,\n    D: 3,\n    A: 5\n  };\n  useEffect(() => {\n    if (play) {\n      if (pos === \"D5\") {\n        board[pos] = {\n          ship: \"F1\",\n          legal: false,\n          style: \"\",\n          playing: false,\n          available: true\n        };\n      } else {\n        board[pos] = {\n          ship: \"\",\n          legal: false,\n          style: \"\",\n          playing: false,\n          available: true\n        };\n      }\n\n      setBoard({ ...board\n      });\n    }\n  }, []);\n\n  const handleClick = () => {\n    if (board[pos].ship === \"\" && selected) {\n      console.log(selected);\n      board[pos].ship = selected;\n      setBoard({ ...board\n      });\n      setSelected(\"\");\n    } else if (board[pos].ship !== \"\" && action) {\n      board[pos].playing = true;\n\n      if (action === \"move\") {\n        validateMove();\n      } else {\n        validateFire();\n      }\n    } else if (board[pos].legal) {\n      if (action === \"move\") {\n        moveShip();\n      } else {\n        fire();\n      }\n\n      setAction(\"\");\n    }\n  };\n\n  const fire = async () => {\n    let log = {\n      user: \"[Usuario]\",\n      action: \"Disparo\",\n      ship: \"\",\n      towards: pos\n    };\n    Object.keys(board).forEach(pos2 => {\n      if (board[pos2].playing) {\n        log.ship = board[pos2].ship;\n        board[pos2].playing = false;\n      }\n\n      board[pos2].style = \"\";\n      board[pos2].legal = false;\n    });\n    setLoading(true);\n    const res = await postAction(gameId, log);\n    handleResponse(res, log);\n    setLoading(false);\n  };\n\n  const moveShip = async () => {\n    let log = {\n      user: \"[Usuario]\",\n      action: \"Mover\",\n      ship: \"\",\n      towards: \"\",\n      blocks: 0\n    };\n    Object.keys(board).forEach(pos2 => {\n      if (board[pos2].playing) {\n        board[pos].ship = board[pos2].ship;\n        board[pos2].playing = false;\n        board[pos2].ship = \"\";\n        log.ship = board[pos].ship;\n\n        if (pos2[0] === pos[0]) {\n          if (parseInt(pos2.slice(1)) < parseInt(pos.slice(1))) {\n            log.towards = \"Sur\";\n          } else {\n            log.towards = \"Norte\";\n          }\n\n          log.blocks = Math.abs(parseInt(pos2.slice(1)) - parseInt(pos.slice(1))).toString();\n        } else {\n          if (letters[pos2[0]] < letters[pos[0]]) {\n            log.towards = \"Este\";\n          } else {\n            log.towards = \"Oeste\";\n          }\n\n          log.blocks = Math.abs(letters[pos2[0]] - letters[pos[0]]).toString();\n        }\n      }\n\n      board[pos2].style = \"\";\n      board[pos2].legal = false;\n    });\n    setBoard({ ...board\n    });\n    setLoading(true);\n    const res = await postAction(gameId, log);\n    handleResponse(res, log);\n    setLoading(false);\n  };\n\n  const validateMove = () => {\n    Object.keys(board).forEach(pos2 => {\n      if (pos !== pos2) {\n        if (pos2.slice(1) === pos.slice(1) && Math.abs(letters[pos2[0]] - letters[pos[0]]) <= moveRange[board[pos].ship[0]] && board[pos2].ship === \"\" && board[pos2].available) {\n          board[pos2].legal = true;\n          board[pos2].style = \"legit\";\n        } else if (pos[0] === pos2[0] && Math.abs(parseInt(pos2.slice(1)) - parseInt(pos.slice(1))) <= moveRange[board[pos].ship[0]] && board[pos2].ship === \"\" && board[pos2].available) {\n          board[pos2].legal = true;\n          board[pos2].style = \"legit\";\n        }\n      }\n    });\n    setBoard({ ...board\n    });\n  };\n\n  const validateFire = () => {\n    Object.keys(board).forEach(pos2 => {\n      if (pos2.slice(1) === pos.slice(1) && Math.abs(letters[pos2[0]] - letters[pos[0]]) <= fireRange[board[pos].ship[0]]) {\n        board[pos2].legal = true;\n        board[pos2].style = \"attack\";\n      } else if (pos[0] === pos2[0] && Math.abs(parseInt(pos2.slice(1)) - parseInt(pos.slice(1))) <= fireRange[board[pos].ship[0]]) {\n        board[pos2].legal = true;\n        board[pos2].style = \"attack\";\n      }\n    });\n    setBoard({ ...board\n    });\n  };\n\n  const handleResponse = (response, userAction) => {\n    const numbers = {\n      \"0\": \"A\",\n      \"1\": \"B\",\n      \"2\": \"C\",\n      \"3\": \"D\",\n      \"4\": \"E\",\n      \"5\": \"F\",\n      \"6\": \"G\",\n      \"7\": \"H\",\n      \"8\": \"I\",\n      \"9\": \"J\"\n    };\n    const directions = {\n      SOUTH: \"Sur\",\n      NORTH: \"Norte\",\n      EAST: \"Este\",\n      WEST: \"Oeste\"\n    };\n    const actions = {\n      MOVE: \"Mover\",\n      FIRE: \"Disparo\"\n    };\n    const events = {\n      HIT_SHIP: \"Impactaste al barco \",\n      SHIP_DESTROYED: \"Destruiste el barco \",\n      DESTROYED_ALL_SHIPS: \"Destruiste todos los barcos\"\n    };\n    let computerAction = {\n      user: \"[Computador]\",\n      action: actions[response.action.type],\n      ship: response.action.ship,\n      towards: \"\"\n    };\n    let computerEvents = [];\n\n    if (response.action.type === \"MOVE\") {\n      computerAction.towards = directions[response.action.direction];\n      computerAction.blocks = response.action.quantity;\n    } else {\n      computerAction.towards = numbers[response.action.row.toString()] + (response.action.column + 1).toString();\n\n      if (board[computerAction.towards].ship !== \"\") {\n        sinkShip(computerAction.towards);\n      }\n    }\n\n    if (response.events.length > 0) {\n      response.events.forEach(event => {\n        console.log(event);\n\n        if (event.type === \"DESTROYED_ALL_SHIPS\") {\n          setWin(true);\n        }\n\n        computerEvents.push({\n          type: events[event.type],\n          ship: event.ship\n        });\n      });\n    }\n\n    setLogs([computerAction, ...computerEvents, userAction, ...logs]);\n  };\n\n  const sinkShip = pos => {\n    let log = [{\n      type: \"Impactaron tu barco \",\n      ship: board[pos].ship\n    }, {\n      type: \"Destruyeron tu barco \",\n      ship: board[pos].ship\n    }];\n    board[pos].ship = \"\";\n    board[pos].available = false;\n    board[pos].style = \"dead\";\n    setBoard({ ...board\n    });\n    return log;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `box ${board[pos] && board[pos].playing && \"active \"} ${board[pos] && board[pos].style}`,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, board[pos] && board[pos].ship));\n};\n\nexport default Box;","map":{"version":3,"sources":["/Users/jnhasard/Google Drive/11vo Semestre/Web/Interrogaciones/Examen/battleship/src/components/box.js"],"names":["React","useEffect","postAction","Box","pos","selected","setSelected","board","setBoard","action","setAction","play","logs","setLogs","gameId","setLoading","setWin","letters","A","B","C","D","E","F","G","H","I","J","fireRange","moveRange","ship","legal","style","playing","available","handleClick","console","log","validateMove","validateFire","moveShip","fire","user","towards","Object","keys","forEach","pos2","res","handleResponse","blocks","parseInt","slice","Math","abs","toString","response","userAction","numbers","directions","SOUTH","NORTH","EAST","WEST","actions","MOVE","FIRE","events","HIT_SHIP","SHIP_DESTROYED","DESTROYED_ALL_SHIPS","computerAction","type","computerEvents","direction","quantity","row","column","sinkShip","length","event","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { postAction } from \"./api/requests\";\nimport \"./styles/box.css\";\n\nconst Box = ({\n  pos,\n  selected,\n  setSelected,\n  board,\n  setBoard,\n  action,\n  setAction,\n  play,\n  logs,\n  setLogs,\n  gameId,\n  setLoading,\n  setWin,\n}) => {\n  const letters = {\n    A: 1,\n    B: 2,\n    C: 3,\n    D: 4,\n    E: 5,\n    F: 6,\n    G: 7,\n    H: 8,\n    I: 9,\n    J: 10,\n  };\n  const fireRange = { F: 4, C: 3, D: 2, A: 1 };\n  const moveRange = { F: 2, C: 2, D: 3, A: 5 };\n\n  useEffect(() => {\n    if (play) {\n      if (pos === \"D5\") {\n        board[pos] = {\n          ship: \"F1\",\n          legal: false,\n          style: \"\",\n          playing: false,\n          available: true,\n        };\n      } else {\n        board[pos] = {\n          ship: \"\",\n          legal: false,\n          style: \"\",\n          playing: false,\n          available: true,\n        };\n      }\n      setBoard({ ...board });\n    }\n  }, []);\n\n  const handleClick = () => {\n    if (board[pos].ship === \"\" && selected) {\n      console.log(selected);\n      board[pos].ship = selected;\n      setBoard({ ...board });\n      setSelected(\"\");\n    } else if (board[pos].ship !== \"\" && action) {\n      board[pos].playing = true;\n      if (action === \"move\") {\n        validateMove();\n      } else {\n        validateFire();\n      }\n    } else if (board[pos].legal) {\n      if (action === \"move\") {\n        moveShip();\n      } else {\n        fire();\n      }\n      setAction(\"\");\n    }\n  };\n\n  const fire = async () => {\n    let log = {\n      user: \"[Usuario]\",\n      action: \"Disparo\",\n      ship: \"\",\n      towards: pos,\n    };\n    Object.keys(board).forEach((pos2) => {\n      if (board[pos2].playing) {\n        log.ship = board[pos2].ship;\n        board[pos2].playing = false;\n      }\n      board[pos2].style = \"\";\n      board[pos2].legal = false;\n    });\n    setLoading(true);\n    const res = await postAction(gameId, log);\n    handleResponse(res, log);\n    setLoading(false);\n  };\n\n  const moveShip = async () => {\n    let log = {\n      user: \"[Usuario]\",\n      action: \"Mover\",\n      ship: \"\",\n      towards: \"\",\n      blocks: 0,\n    };\n    Object.keys(board).forEach((pos2) => {\n      if (board[pos2].playing) {\n        board[pos].ship = board[pos2].ship;\n        board[pos2].playing = false;\n        board[pos2].ship = \"\";\n        log.ship = board[pos].ship;\n        if (pos2[0] === pos[0]) {\n          if (parseInt(pos2.slice(1)) < parseInt(pos.slice(1))) {\n            log.towards = \"Sur\";\n          } else {\n            log.towards = \"Norte\";\n          }\n          log.blocks = Math.abs(\n            parseInt(pos2.slice(1)) - parseInt(pos.slice(1))\n          ).toString();\n        } else {\n          if (letters[pos2[0]] < letters[pos[0]]) {\n            log.towards = \"Este\";\n          } else {\n            log.towards = \"Oeste\";\n          }\n          log.blocks = Math.abs(letters[pos2[0]] - letters[pos[0]]).toString();\n        }\n      }\n      board[pos2].style = \"\";\n      board[pos2].legal = false;\n    });\n    setBoard({ ...board });\n    setLoading(true);\n    const res = await postAction(gameId, log);\n    handleResponse(res, log);\n    setLoading(false);\n  };\n\n  const validateMove = () => {\n    Object.keys(board).forEach((pos2) => {\n      if (pos !== pos2) {\n        if (\n          pos2.slice(1) === pos.slice(1) &&\n          Math.abs(letters[pos2[0]] - letters[pos[0]]) <=\n            moveRange[board[pos].ship[0]] &&\n          board[pos2].ship === \"\" &&\n          board[pos2].available\n        ) {\n          board[pos2].legal = true;\n          board[pos2].style = \"legit\";\n        } else if (\n          pos[0] === pos2[0] &&\n          Math.abs(parseInt(pos2.slice(1)) - parseInt(pos.slice(1))) <=\n            moveRange[board[pos].ship[0]] &&\n          board[pos2].ship === \"\" &&\n          board[pos2].available\n        ) {\n          board[pos2].legal = true;\n          board[pos2].style = \"legit\";\n        }\n      }\n    });\n    setBoard({ ...board });\n  };\n\n  const validateFire = () => {\n    Object.keys(board).forEach((pos2) => {\n      if (\n        pos2.slice(1) === pos.slice(1) &&\n        Math.abs(letters[pos2[0]] - letters[pos[0]]) <=\n          fireRange[board[pos].ship[0]]\n      ) {\n        board[pos2].legal = true;\n        board[pos2].style = \"attack\";\n      } else if (\n        pos[0] === pos2[0] &&\n        Math.abs(parseInt(pos2.slice(1)) - parseInt(pos.slice(1))) <=\n          fireRange[board[pos].ship[0]]\n      ) {\n        board[pos2].legal = true;\n        board[pos2].style = \"attack\";\n      }\n    });\n    setBoard({ ...board });\n  };\n\n  const handleResponse = (response, userAction) => {\n    const numbers = {\n      \"0\": \"A\",\n      \"1\": \"B\",\n      \"2\": \"C\",\n      \"3\": \"D\",\n      \"4\": \"E\",\n      \"5\": \"F\",\n      \"6\": \"G\",\n      \"7\": \"H\",\n      \"8\": \"I\",\n      \"9\": \"J\",\n    };\n    const directions = {\n      SOUTH: \"Sur\",\n      NORTH: \"Norte\",\n      EAST: \"Este\",\n      WEST: \"Oeste\",\n    };\n    const actions = {\n      MOVE: \"Mover\",\n      FIRE: \"Disparo\",\n    };\n    const events = {\n      HIT_SHIP: \"Impactaste al barco \",\n      SHIP_DESTROYED: \"Destruiste el barco \",\n      DESTROYED_ALL_SHIPS: \"Destruiste todos los barcos\",\n    };\n\n    let computerAction = {\n      user: \"[Computador]\",\n      action: actions[response.action.type],\n      ship: response.action.ship,\n      towards: \"\",\n    };\n\n    let computerEvents = [];\n\n    if (response.action.type === \"MOVE\") {\n      computerAction.towards = directions[response.action.direction];\n      computerAction.blocks = response.action.quantity;\n    } else {\n      computerAction.towards =\n        numbers[response.action.row.toString()] +\n        (response.action.column + 1).toString();\n      if (board[computerAction.towards].ship !== \"\") {\n        sinkShip(computerAction.towards);\n      }\n    }\n    if (response.events.length > 0) {\n      response.events.forEach((event) => {\n        console.log(event);\n        if (event.type === \"DESTROYED_ALL_SHIPS\") {\n          setWin(true);\n        }\n        computerEvents.push({ type: events[event.type], ship: event.ship });\n      });\n    }\n    setLogs([computerAction, ...computerEvents, userAction, ...logs]);\n  };\n\n  const sinkShip = (pos) => {\n    let log = [\n      { type: \"Impactaron tu barco \", ship: board[pos].ship },\n      { type: \"Destruyeron tu barco \", ship: board[pos].ship },\n    ];\n    board[pos].ship = \"\";\n    board[pos].available = false;\n    board[pos].style = \"dead\";\n    setBoard({ ...board });\n    return log;\n  };\n\n  return (\n    <div\n      className={`box ${board[pos] && board[pos].playing && \"active \"} ${\n        board[pos] && board[pos].style\n      }`}\n      onClick={handleClick}\n    >\n      <p>{board[pos] && board[pos].ship}</p>\n    </div>\n  );\n};\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}