{"ast":null,"code":"import { axiosInstance } from \"./AxiosInstance\";\nexport const getToken = async () => {\n  const formData = {\n    email: \"jnhasard@uc.cl\",\n    studentNumber: \"1562157J\"\n  };\n  const path = \"/auth\";\n  const res = await axiosInstance.put(path, formData);\n  console.log(\"token: \", res.data.token);\n  setToken(res.data.token);\n};\n\nconst setToken = token => {\n  if (token) {\n    console.log(\"Header Set succesfully\");\n    axiosInstance.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    localStorage.setItem(\"Authorization\", JSON.stringify(token));\n  }\n};\n\nexport const getGameId = async () => {\n  const res = await axiosInstance.post(\"/games\");\n  console.log(\"gameId: \", res.data.gameId);\n  return res.data.gameId;\n};\nexport const postAction = async (gameId, log) => {\n  const directions = {\n    Sur: \"SOUTH\",\n    Norte: \"NORTH\",\n    Este: \"EAST\",\n    Oeste: \"WEST\"\n  };\n  const letters = {\n    A: 1,\n    B: 2,\n    C: 3,\n    D: 4,\n    E: 5,\n    F: 6,\n    G: 7,\n    H: 8,\n    I: 9,\n    J: 10\n  };\n  let formData = {};\n\n  if (log.action.type === \"Mover\") {\n    formData = {\n      action: {\n        type: \"MOVE\",\n        ship: log.ship,\n        direction: directions[log.towards],\n        quantity: log.blocks\n      }\n    };\n  } else {\n    formData = {\n      action: {\n        type: \"FIRE\",\n        ship: log.ship,\n        row: parseInt(log.towards.slice(1)) - 1,\n        column: letters[log.towards[0]] - 1\n      }\n    };\n  }\n\n  const res = await axiosInstance.post(\"/games/\" + gameId + \"/action\", formData);\n  return res.data;\n};","map":{"version":3,"sources":["/Users/jnhasard/Google Drive/11vo Semestre/Web/Interrogaciones/Examen/battleship/src/components/api/requests.js"],"names":["axiosInstance","getToken","formData","email","studentNumber","path","res","put","console","log","data","token","setToken","defaults","headers","common","localStorage","setItem","JSON","stringify","getGameId","post","gameId","postAction","directions","Sur","Norte","Este","Oeste","letters","A","B","C","D","E","F","G","H","I","J","action","type","ship","direction","towards","quantity","blocks","row","parseInt","slice","column"],"mappings":"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","sourcesContent":["import { axiosInstance } from \"./AxiosInstance\";\n\nexport const getToken = async () => {\n  const formData = { email: \"jnhasard@uc.cl\", studentNumber: \"1562157J\" };\n  const path = \"/auth\";\n  const res = await axiosInstance.put(path, formData);\n  console.log(\"token: \", res.data.token);\n  setToken(res.data.token);\n};\n\nconst setToken = (token) => {\n  if (token) {\n    console.log(\"Header Set succesfully\");\n    axiosInstance.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    localStorage.setItem(\"Authorization\", JSON.stringify(token));\n  }\n};\n\nexport const getGameId = async () => {\n  const res = await axiosInstance.post(\"/games\");\n  console.log(\"gameId: \", res.data.gameId);\n  return res.data.gameId;\n};\n\nexport const postAction = async (gameId, log) => {\n  const directions = {\n    Sur: \"SOUTH\",\n    Norte: \"NORTH\",\n    Este: \"EAST\",\n    Oeste: \"WEST\",\n  };\n  const letters = {\n    A: 1,\n    B: 2,\n    C: 3,\n    D: 4,\n    E: 5,\n    F: 6,\n    G: 7,\n    H: 8,\n    I: 9,\n    J: 10,\n  };\n\n  let formData = {};\n  if (log.action.type === \"Mover\") {\n    formData = {\n      action: {\n        type: \"MOVE\",\n        ship: log.ship,\n        direction: directions[log.towards],\n        quantity: log.blocks,\n      },\n    };\n  } else {\n    formData = {\n      action: {\n        type: \"FIRE\",\n        ship: log.ship,\n        row: parseInt(log.towards.slice(1)) - 1,\n        column: letters[log.towards[0]] - 1,\n      },\n    };\n  }\n  const res = await axiosInstance.post(\n    \"/games/\" + gameId + \"/action\",\n    formData\n  );\n  return res.data;\n};\n"]},"metadata":{},"sourceType":"module"}